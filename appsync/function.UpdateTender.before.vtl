## PUT NEW INPUT ARGUMENTS NEED TO CREATE TENDERS
$util.qr($context.stash.put("pipelineFunctions", 
["TokenAuthorizerFunction",
"GetUserAuroraFunction",
"GetAclAuroraFunction",
"GetTenderAuroraFunction",
"UpdateTenderElasticFunction", 
"UpdateTenderAuroraFunction",
"UpdateTenderCriterionCpvsAuroraFunction",
"UpdateTenderCriterionsAuroraFunction",
""
]))
$util.qr($context.stash.put("pipelineFunctionsInfo", 
{
"TokenAuthorizerFunction": {"type":"LAMBDA"},
"GetUserAuroraFunction": {"type":"AURORA"},
"GetAclAuroraFunction": {"type":"AURORA", "table":"resourceaccesslist"},
"GetTenderAuroraFunction": {"type":"AURORA"}, 
"UpdateTenderElasticFunction": {"type":"LAMBDA"} ,
"UpdateTenderAuroraFunction": {"type":"AURORA", "table":"tenders", "key": "tenderUuid"},
"UpdateTenderCriterionCpvsAuroraFunction": {"type":"AURORA", "table":"tendercriterioncpv", "key": "tenderUuid, scope, cpvId"},
"UpdateTenderCriterionsAuroraFunction": {"type":"AURORA", "table":"tendercriterion", "key": "tenderUuid, scope, textParseId, word"}  
}
))
## STARTING FROM INDEX 4 BECAUSE WE WANT TO TRACK FROM AURORA RESOLVERS ONLY
$util.qr($context.stash.put("currentPipelineFunctionIndex", 5))
$util.qr($context.stash.put("currentPipelineFunction", $context.stash.pipelineFunctions[$context.stash.currentPipelineFunctionIndex])) 
{}